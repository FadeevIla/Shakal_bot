# battle.py:
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, Message
from utils import get_weight, update_weight, get_top
import random
from config import bot

async def get_user_name(chat_id: int, user_id: int) -> str:
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID."""
    try:
        user = await bot.get_chat_member(chat_id, user_id)
        return user.user.full_name  # –ú–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å user.user.username –¥–ª—è username
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"

async def fight_shakal(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥—É—ç–ª–∏ —à–∞–∫–∞–ª–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–æ—Ç–∫–∞–∑–∞."""
    chat_id = message.chat.id
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    args = message.text.split()

    if len(args) < 2:
        await message.reply("‚öî –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: <code>/fight –°–¢–ê–í–ö–ê</code>")
        return

    try:
        bet = float(args[1])
        if bet <= 0:
            raise ValueError
    except ValueError:
        await message.reply("‚ö† –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 0.")
        return

    current_weight = get_weight(chat_id, user_id)

    if current_weight < bet:
        await message.reply(f"‚ùå –£ —à–∞–∫–∞–ª–∞ {user_name} –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –≤–µ—Å–∞! (–í–∞—à –≤–µ—Å: {current_weight} –∫–≥)")
        return

    if message.reply_to_message:
        opponent_id = message.reply_to_message.from_user.id
        opponent_name = message.reply_to_message.from_user.first_name

        if opponent_id == user_id:
            await message.reply("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å—Ä–∞–∑–∏—Ç—å—Å—è —Å —Å–∞–º–∏–º —Å–æ–±–æ–π!")
            return

        opponent_weight = get_weight(chat_id, opponent_id)

        if opponent_weight < bet:
            await message.reply(f"‚ùå –£ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ {opponent_name} –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–µ—Å–∞ –¥–ª—è —Å—Ç–∞–≤–∫–∏!")
            return

        callback_data_accept = f"accept_fight_{user_id}_{opponent_id}_{bet}"
        callback_data_decline = f"decline_fight_{user_id}"

        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–ü—Ä–∏–Ω—è—Ç—å", callback_data=callback_data_accept)],
            [InlineKeyboardButton(text="–û—Ç–∫–∞–∑–∞—Ç—å—Å—è", callback_data=callback_data_decline)]
        ])

        await message.answer(
            f"üî• –î—É—ç–ª—å –º–µ–∂–¥—É —à–∞–∫–∞–ª–∞–º–∏!\n"
            f"‚öî {user_name} VS {opponent_name}\n"
            f"üèÜ –°—Ç–∞–≤–∫–∞: {bet} –∫–≥\n\n"
            f"–í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–Ω—è—Ç—å –¥—É—ç–ª—å?",
            reply_markup=keyboard
        )

    else:
        await message.reply("‚ùå –ß—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å –¥—É—ç–ª—å, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥—Ä—É–≥–æ–≥–æ –∏–≥—Ä–æ–∫–∞.")

async def accept_fight(callback_query: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è –¥—É—ç–ª–∏."""
    print(f"DEBUG: Callback data = {callback_query.data}")  # –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

    try:
        parts = callback_query.data.split('_')  # –†–∞–∑–±–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        print(f"DEBUG: len(parts) = {len(parts)}, parts = {parts}")  # –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç split

        if len(parts) != 5 or parts[0] != "accept" or parts[1] != "fight":
            raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö")

        user_id = int(parts[2])
        opponent_id = int(parts[3])
        bet = round(float(parts[4]), 1)  # –û–∫—Ä—É–≥–ª—è–µ–º —Å—Ç–∞–≤–∫—É –¥–æ 1 –∑–Ω–∞–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
    except (ValueError, IndexError) as e:
        print(f"ERROR: {e}")  # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        await callback_query.answer("‚ùå –û—à–∏–±–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö –¥—É—ç–ª–∏.", show_alert=True)
        return

    chat_id = callback_query.message.chat.id
    from_user_id = callback_query.from_user.id

    if from_user_id != opponent_id:
        await callback_query.answer("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —ç—Ç—É –¥—É—ç–ª—å!", show_alert=True)
        return

    user_name = callback_query.from_user.first_name
    opponent_name = await get_user_name(chat_id, user_id)

    current_weight = get_weight(chat_id, from_user_id)
    if current_weight < bet:
        await callback_query.message.answer(f"‚ùå {user_name}, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–µ—Å–∞ –¥–ª—è —Å—Ç–∞–≤–∫–∏!")
        return

    opponent_weight = get_weight(chat_id, user_id)
    if opponent_weight < bet:
        await callback_query.message.answer(f"‚ùå {opponent_name} –Ω–µ –º–æ–∂–µ—Ç —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å ‚Äî –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–µ—Å–∞!")
        return

    winner_id, loser_id = random.sample([user_id, opponent_id], 2)

    # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –≤–µ—Å, –Ω–µ –∏–∑–º–µ–Ω—è—è –≤—Ä–µ–º–µ–Ω–∏ –∫–æ—Ä–º–ª–µ–Ω–∏—è
    update_weight(chat_id, winner_id, bet, update_feed_time=False)
    update_weight(chat_id, loser_id, -bet, update_feed_time=False)

    winner_name = await get_user_name(chat_id, winner_id)
    loser_name = await get_user_name(chat_id, loser_id)

    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π –≤–µ—Å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
    winner_new_weight = round(get_weight(chat_id, winner_id), 1)

    await callback_query.message.answer(
        f"üî• –î—É—ç–ª—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n"
        f"‚öî {user_name} VS {opponent_name}\n"
        f"üèÜ –ü–æ–±–µ–¥–∏–ª {winner_name} –∏ –∑–∞–±—Ä–∞–ª {bet} –∫–≥ –≤–µ—Å–∞!\n"
        f"üìä –¢–µ–ø–µ—Ä—å –µ–≥–æ –≤–µ—Å: {winner_new_weight} –∫–≥"
    )

    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    await callback_query.message.delete()

async def decline_fight(callback_query: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–∞–∑–∞ –æ—Ç –¥—É—ç–ª–∏."""
    try:
        data = callback_query.data.split('_')
        user_id = int(data[1])
    except (ValueError, IndexError):
        await callback_query.answer("‚ùå –û—à–∏–±–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö –¥—É—ç–ª–∏.", show_alert=True)
        return

    chat_id = callback_query.message.chat.id
    from_user_id = callback_query.from_user.id

    if from_user_id != user_id:
        await callback_query.answer("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–∫–ª–æ–Ω–∏—Ç—å —ç—Ç—É –¥—É—ç–ª—å!", show_alert=True)
        return

    await callback_query.message.answer("‚ùå –î—É—ç–ª—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.")

    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    await callback_query.message.delete()
